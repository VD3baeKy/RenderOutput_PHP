version: '3.8'

services:
  # --- SaaS PostgreSQLへの初期化用サービス ---
  db_init:
    image: postgres:15
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    command: >
      bash -c "
        until pg_isready -h ${DB_HOST} -p ${DB_PORT:-5432} -U ${DB_USER}; do
          echo 'Waiting for DB...' && sleep 2;
        done
        &&
        psql -h ${DB_HOST} -p ${DB_PORT:-5432} -U ${DB_USER} -d ${DB_NAME} -f /init.sql
      "
    volumes:
      - ./docker/postgres/init.sql:/init.sql:ro
    networks:
      - app_network
    restart: "no"

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ${APP_NAME}_php
    volumes:
      - ./src:/var/www/html
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT:-5432}
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: ${APP_NAME}_nginx
    ports:
      - "${WEB_PORT:-10000}:80"
    volumes:
      - ./src:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app_network:
    driver: bridge
    
